dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # спользуем Virtual Machine (а не Docker container)

language: c       # на практике разницы между специфичным для C++ окружением
                    # и, скажем, python -- никакой. Но пусть будет cpp.

os:
    # будем прогонять CI и на Linux, и на Mac OS X...
    - linux
    - osx

compiler:
    # ... и с помощью GCC, и Clang
    - gcc
    - clang

env:
    # список переменных окружения, влияющих на матрицу сборки:
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Release

matrix:
    exclude:
        # вручную исключим ненужные элементы из матрицы сборки:
        - os:       osx
          compiler: gcc

        - os:  osx
          env: TARGET_CPU=x86

        - os: osx
          script: gcovr -r..
install:
    # скрипт настройки среды и установки зависимостей:
    - source ci/travis/install-$TRAVIS_OS_NAME.sh

script:
    # скрипт сборки и тестирования проекта:
    - cmake -DLIB_STATIC=1 -DSEQUENCE=1 CMakeLists.txt -D-DTARGET_CPU=$TARGET_CPU
    - cmake --build .
    - ctest --output-on-failure
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ctest; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cppcheck --error-exitcode=1 --enable=warning,performance,information,style  /test/*.cpp /src/vect_lib/*.c /include/*.h; fi

deploy:
    # выкладываем tagged-коммиты на GitHub Releases:
    provider:     releases
    file:         <package-file>
    skip_cleanup: true
    overwrite:    true

    api_key:
        secure:   <encrypted-github-token>

    on:
        tags:     true
